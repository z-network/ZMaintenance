package gq.devmc.zmaint.commands;

import gq.devmc.zmaint.utilities.Data;
import gq.devmc.zmaint.utilities.Messages;
import gq.devmc.zmaint.utilities.UUIDFetcher;
import net.md_5.bungee.api.CommandSender;
import net.md_5.bungee.api.chat.TextComponent;
import net.md_5.bungee.api.plugin.Command;

public class Command_Whitelist
  extends Command
{
  public Command_Whitelist()
  {
    super("zwhitelist");
  }
  
  public void execute(CommandSender sender, String[] args)
  {
    if (sender.hasPermission("zmaintenance.whitelist"))
    {
      if (args.length == 2)
      {
        if (args[0].equalsIgnoreCase("add"))
        {
          String target = args[1];
          String uuid = UUIDFetcher.getUUID(target).replaceAll("-", "");
          if (Data.whitelist.contains(uuid))
          {
            sender.sendMessage(new TextComponent(Data.prefix + Messages.alreadyonwhitelist));
          }
          else
          {
            Data.whitelist.add(uuid);
            sender.sendMessage(new TextComponent(Data.prefix + Messages.addedtowhitelist));
          }
        }
        else if (args[0].equalsIgnoreCase("remove"))
        {
          String target = args[1];
          String uuid = UUIDFetcher.getUUID(target.replaceAll("-", ""));
          if (Data.whitelist.contains(uuid))
          {
            Data.whitelist.remove(uuid);
            sender.sendMessage(new TextComponent(Data.prefix + Messages.removedfromwhitelist));
          }
          else
          {
            sender.sendMessage(new TextComponent(Data.prefix + Messages.isnotonwhitelist));
          }
        }
      }
      else if ((args.length == 1) && 
        (args[0].equalsIgnoreCase("list")))
      {
        sender.sendMessage(new TextComponent("?aWhitelisted Players?8:"));
        for (int i = 0; i < Data.whitelist.size(); i++) {
          sender.sendMessage(new TextComponent("?8? ?e" + UUIDFetcher.getName((String)Data.whitelist.get(i))));
        }
      }
    }
    else {
      sender.sendMessage(new TextComponent(Messages.nopermission));
    }
  }
}
